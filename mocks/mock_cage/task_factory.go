// Code generated by MockGen. DO NOT EDIT.
// Source: ./task_factory.go

// Package mock_cage is a generated GoMock package.
package mock_cage

import (
	reflect "reflect"

	types "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	gomock "github.com/golang/mock/gomock"
	task "github.com/loilo-inc/canarycage/task"
)

// MockTaskFactory is a mock of TaskFactory interface.
type MockTaskFactory struct {
	ctrl     *gomock.Controller
	recorder *MockTaskFactoryMockRecorder
}

// MockTaskFactoryMockRecorder is the mock recorder for MockTaskFactory.
type MockTaskFactoryMockRecorder struct {
	mock *MockTaskFactory
}

// NewMockTaskFactory creates a new mock instance.
func NewMockTaskFactory(ctrl *gomock.Controller) *MockTaskFactory {
	mock := &MockTaskFactory{ctrl: ctrl}
	mock.recorder = &MockTaskFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskFactory) EXPECT() *MockTaskFactoryMockRecorder {
	return m.recorder
}

// NewAlbTask mocks base method.
func (m *MockTaskFactory) NewAlbTask(input *task.Input, lb *types.LoadBalancer) task.Task {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewAlbTask", input, lb)
	ret0, _ := ret[0].(task.Task)
	return ret0
}

// NewAlbTask indicates an expected call of NewAlbTask.
func (mr *MockTaskFactoryMockRecorder) NewAlbTask(input, lb interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAlbTask", reflect.TypeOf((*MockTaskFactory)(nil).NewAlbTask), input, lb)
}

// NewSimpleTask mocks base method.
func (m *MockTaskFactory) NewSimpleTask(input *task.Input) task.Task {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewSimpleTask", input)
	ret0, _ := ret[0].(task.Task)
	return ret0
}

// NewSimpleTask indicates an expected call of NewSimpleTask.
func (mr *MockTaskFactoryMockRecorder) NewSimpleTask(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewSimpleTask", reflect.TypeOf((*MockTaskFactory)(nil).NewSimpleTask), input)
}

// NewSrvTask mocks base method.
func (m *MockTaskFactory) NewSrvTask(input *task.Input, srv *types.ServiceRegistry) task.Task {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewSrvTask", input, srv)
	ret0, _ := ret[0].(task.Task)
	return ret0
}

// NewSrvTask indicates an expected call of NewSrvTask.
func (mr *MockTaskFactoryMockRecorder) NewSrvTask(input, srv interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewSrvTask", reflect.TypeOf((*MockTaskFactory)(nil).NewSrvTask), input, srv)
}
